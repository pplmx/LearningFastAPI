[project]
name = "learning-fastapi"
version = "0.0.1"
description = "A nice python project"
readme = "README.md"
requires-python = ">=3.13"
license = "MIT"
authors = [
    { name = "Mystic" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "fastapi[standard]>=0.115.4",
    "passlib[bcrypt]>=1.7.4",
    "python-jose[cryptography]>=3.3.0",
    "sqlmodel>=0.0.22",
]

[dependency-groups]
dev = [
    "allure-pytest>=2.13.5",
    "pytest-cov>=6.0.0",
    "pytest>=8.3.3",
]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "-ra",
    "-q",
    "--cov=learning-fastapi",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=lcov",
    "--alluredir=allure-results",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_functions = ["test_*"]
markers = [
    "integration: marks tests as integration tests (deselect with '-m \"not integration\"')",
]

[tool.coverage.run]
source_pkgs = ["learning_fastapi"]
branch = true
parallel = true
omit = [
    "*/.venv/*",
    "*/tests/*",
    "*/site-packages/*",
]

[tool.coverage.paths]
learning_fastapi = ["src/app"]
tests = ["tests"]

[tool.coverage.report]
exclude_lines = [
    "if __name__ == .__main__.:",
    "if self.debug:",
    "if TYPE_CHECKING:",
    "no cov",
    "raise NotImplementedError",
    "pass",
    "pragma: no cover",
]
show_missing = true  # Show missing lines in the report
precision = 2  # Number of decimal places to use when rounding
